AWSTemplateFormatVersion: 2010-09-09
Description: Create the event resouces (qs-1ui8pi7ot).
Parameters:
  IncidentFunction:
    Description: The arn for the Lambda function that will send incidents to Cherwell.
    Type: String
  CMDBFunction:
    Description: The arn for the CMDB Lambda function.
    Type: String
Resources:
  ComplianceEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Cherwell CMDB
      EventPattern:
        source:
          - aws.config
        detail-type:
          - Config Rules Compliance Change
      State: ENABLED
      Targets:
        - Arn:
            Ref: CMDBFunction
          Id: EventFunction
  PermissionForComplianceEventsToInvokeLam:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: CMDBFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - CMDBEventRule
          - Arn
  CMDBEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Cherwell CMDB
      EventPattern:
        source:
          - aws.config
        detail-type:
          - Config Configuration Item Change
        detail:
          messageType:
            - ConfigurationItemChangeNotification
          configurationItem:
            resourceType:
              - AWS::EC2::Instance
              - AWS::S3::Bucket
              - AWS::EC2::Volume
              - AWS::RDS::DBInstance
      State: ENABLED
      Targets:
        - Arn:
            Ref: CMDBFunction
          Id: EventFunction
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: CMDBFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - CMDBEventRule
          - Arn
  IncidentSNSTopicKMS:
    Metadata:
      cfn-lint:
        config:
          ignore_checks: [ EIAMPolicyActionWildcard ]
          ignore_reasons:
            EIAMPolicyActionWildcard: >-
              Action This is required as it is for root key management.
    Type: AWS::KMS::Key
    Properties:
      Description: "KMS Key used to encrypt SNS"
      EnableKeyRotation: true
      PendingWindowInDays: 20
      KeyPolicy:
        Version: 2012-10-17
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: '*'
          - Sid: Enable usage for SNS
            Effect: Allow
            Principal:
              AWS: sns.amazonaws.com
            Action:
              - 'kms:Decrypt'
              - 'kms:GenerateDataKey'
            Resource: '*'
            Condition:
              ArnLike:
                aws:SourceArn: 'arn:aws:sns::::'
  IncidentSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Cherwell
      KmsMasterKeyId: !Ref IncidentSNSTopicKMS
      Subscription:
        - Endpoint:
            Ref: IncidentFunction
          Protocol: lambda
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: IncidentSNSTopic
      FunctionName:
        Ref: IncidentFunction
Outputs:
  IncidentSNSTopicName:
    Description: The name of the SNS incident topic.
    Value:
      Fn::GetAtt:
        - IncidentSNSTopic
        - TopicName
